name: Release

on:
  push:
    branches:
      - master
      - next
  workflow_dispatch:

env:
  NODE_VERSION: 22
  PNPM_VERSION: 10.0.0

jobs:
  release:
    name: Build, Test and Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Enable Corepack
        run: corepack enable

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: ${{ env.PNPM_VERSION }}
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Get pnpm cache directory
        id: pnpm-cache-dir
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_OUTPUT
      - name: Generate cache key
        id: cache-key
        shell: bash
        run: |
          echo "key=node-v${{ env.NODE_VERSION }}-pnpm-v${{ env.PNPM_VERSION }}-lock-${{ hashFiles('**/pnpm-lock.yaml') }}" >> $GITHUB_OUTPUT
          echo "restore_key=node-v${{ env.NODE_VERSION }}-pnpm-v${{ env.PNPM_VERSION }}-lock-" >> $GITHUB_OUTPUT
      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.pnpm-cache-dir.outputs.STORE_PATH }}
          key: ${{ steps.cache-key.outputs.key }}
          restore-keys: ${{ steps.cache-key.outputs.restore_key }}
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Run linter
        run: pnpm run lint
      - name: Run tests
        run: pnpm run test
      - name: Build project
        run: pnpm run build
      - name: Run semantic-release
        run: pnpx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

// Globals
$error: var(--zen-error, hsl(0deg 70% 50%));
$focus-shadow: var(--zen-focus-shadow, 0 1px 4px hsl(0deg 0% 60% / 20%) inset);
$outline: var(--zen-outline, 2px solid hsl(200deg 100% 50% / 50%));
$transition-duration: var(--zen-transition-duration, 0.2s);

:host {
  --zen-checkbox-size: 1rem;
  --zen-checkbox-border-radius: 0.375rem; // 6px
  --zen-checkbox-appearance: hsl(0deg 0% 10%);
  --zen-checkbox-disabled-opacity: 0.6;
  --zen-checkbox-border: 1px solid hsl(0deg 0% 80%);
}

input {
  position: absolute;
  cursor: pointer;
  opacity: 0;
  height: 100%;
  width: 100%;
  padding: 0;
  margin: 0;
  top: 0;
  left: 0;
}

/* stylelint-disable-next-line no-duplicate-selectors -- separate variables and styles */
:host {
  border: var(--zen-checkbox-border);
  border-radius: var(--zen-checkbox-border-radius);
  height: var(--zen-checkbox-size);
  width: var(--zen-checkbox-size);
  background-color: white;
  cursor: pointer;
  position: relative;
  transition:
    background-color ease,
    border-color ease;
  transition-duration: $transition-duration;
  user-select: none;
  justify-content: center;
  display: grid;
  place-items: center;
  font-size: small;

  &:has(input:checked) {
    color: white;
    background-color: var(--zen-checkbox-appearance);
    border-color: var(--zen-checkbox-appearance);
  }

  &:has(input[type='checkbox']:disabled) {
    opacity: var(--zen-checkbox-disabled-opacity);

    &,
    input {
      cursor: not-allowed;
    }
  }

  &:has(input:focus-visible) {
    outline: $outline;
    box-shadow: $focus-shadow;
  }

  &:has(input:user-invalid) {
    border-color: $error;
  }
}
